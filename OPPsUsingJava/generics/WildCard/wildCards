The question mark (?) is known as the wildcard in generic programming. It represents an unknown type.
The wildcard can be used in a variety of situations such as the type of a parameter, field, or local variable;
sometimes as a return type. Unlike arrays, different instantiations of a generic type are not compatible with each other,
not even explicitly. This incompatibility may be softened by the wildcard if ? is used as an actual type parameter.

Types of wildcards in Java:
1. Upper Bounded Wildcards:
These wildcards can be used when you want to relax the restrictions on a variable. For example,
say you want to write a method that works on List < Integer >, List < Double >, and List < Number >,
you can do this using an upper bounded wildcard.

To declare an upper-bounded wildcard, use the wildcard character (‘?’), followed by the extends keyword,
followed by its upper bound.

Syntax: public static void add(List<? extends Number> list)

--------------------------------------------------------------------------------------------------------------------------------------

2. Lower Bounded Wildcards:
It is expressed using the wildcard character (‘?’), followed by the super keyword, followed by its lower bound: <? super A>.
In this we can pass type of given class and it's super class.
Syntax: Collectiontype <? super A>

-------------------------------------------------------------------------------------------------------------------------------------

3. Unbounded Wildcard:
This wildcard type is specified using the wildcard character (?), for example, List. This is called a list of unknown types.
These are useful in the following cases –

When writing a method that can be employed using functionality provided in Object class.
When the code is using methods in the generic class that doesn’t depend on the type parameter