In object-oriented programming, object copying is creating a copy of an existing object, the resulting object is called an object copy or simply copy of the original object.There are several ways to copy an object, most commonly by a copy constructor or cloning.
We can define Cloning as “create a copy of object”. Shallow, deep and lazy copy is related to cloning process.
These are actually three ways for creating copy object.

1.Shallow Copy:
    In this type of copy it make copy of primitive data type and it doesn't make copy
    of Objects it refer to that Object so any changes made in that variable will reflect on real one.

2.Deep Copy:
    ->Whenever we need own copy not to use default implementation we call it as deep copy,
     whenever we need deep copy of the object we need to implement according to our need.

     ->A deep copy means actually creating a new array and copying over the values.
3.Lazy copy:
    A lazy copy can be defined as a combination of both shallow copy and deep copy.
    The mechanism follows a simple approach – at the initial state, shallow copy approach is used.
    A counter is also used to keep a track on how many objects share the data.
    When the program wants to modify the original object, it checks whether the object is shared or not.
    If the object is shared, then the deep copy mechanism is initiated.